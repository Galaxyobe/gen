//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
 Copyright 2022 Galaxyobe.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/

// Code generated by ___1option_gen. DO NOT EDIT.

package builtins

func WithU8AliasOption(val Uint8) AliasOption {
	return func(object *Alias) {
		object.U8 = val
	}
}

func WithI8AliasOption(val Int8) AliasOption {
	return func(object *Alias) {
		object.I8 = val
	}
}

func WithUAliasOption(val Uint) AliasOption {
	return func(object *Alias) {
		object.U = val
	}
}

func WithIAliasOption(val Int) AliasOption {
	return func(object *Alias) {
		object.I = val
	}
}

func WithStrFuncAliasOption(val StrFunc) AliasOption {
	return func(object *Alias) {
		object.StrFunc = val
	}
}

func WithI8FuncAliasOption(val I8Func) AliasOption {
	return func(object *Alias) {
		object.I8Func = val
	}
}

func WithU8FuncAliasOption(val U8Func) AliasOption {
	return func(object *Alias) {
		object.U8Func = val
	}
}

func WithInt8AliasOption(val int8) AliasOption {
	return func(object *Alias) {
		object.Int8 = val
	}
}

func WithUint8AliasOption(val uint8) AliasOption {
	return func(object *Alias) {
		object.Uint8 = val
	}
}

func WithAAliasOption(val interface{}) AliasOption {
	return func(object *Alias) {
		object.a = val
	}
}

func WithA2AliasOption(val interface{}) AliasOption {
	return func(object *Alias) {
		object.A = val
	}
}

func WithBAliasOption(val byte) AliasOption {
	return func(object *Alias) {
		object.b = val
	}
}

func WithI2AliasOption(val int) AliasOption {
	return func(object *Alias) {
		object.i = val
	}
}

func WithU2AliasOption(val uint) AliasOption {
	return func(object *Alias) {
		object.u = val
	}
}

func WithBoolAliasOption(val bool) AliasOption {
	return func(object *Alias) {
		object.Bool = val
	}
}

func WithByteAliasOption(val byte) AliasOption {
	return func(object *Alias) {
		object.Byte = val
	}
}

func WithInt16AliasOption(val int16) AliasOption {
	return func(object *Alias) {
		object.Int16 = val
	}
}

func WithInt32AliasOption(val int32) AliasOption {
	return func(object *Alias) {
		object.Int32 = val
	}
}

func WithInt64AliasOption(val int64) AliasOption {
	return func(object *Alias) {
		object.Int64 = val
	}
}

func WithUint16AliasOption(val uint16) AliasOption {
	return func(object *Alias) {
		object.Uint16 = val
	}
}

func WithUint32AliasOption(val uint32) AliasOption {
	return func(object *Alias) {
		object.Uint32 = val
	}
}

func WithUint64AliasOption(val uint64) AliasOption {
	return func(object *Alias) {
		object.Uint64 = val
	}
}

func WithFloat32AliasOption(val float32) AliasOption {
	return func(object *Alias) {
		object.Float32 = val
	}
}

func WithFloat64AliasOption(val float64) AliasOption {
	return func(object *Alias) {
		object.Float64 = val
	}
}

func WithStringAliasOption(val string) AliasOption {
	return func(object *Alias) {
		object.String = val
	}
}

func WithBytesAliasOption(val ...byte) AliasOption {
	return func(object *Alias) {
		object.Bytes = val
	}
}

func WithBoolPAliasOption(val *bool) AliasOption {
	return func(object *Alias) {
		object.BoolP = val
	}
}

func WithBytePAliasOption(val *byte) AliasOption {
	return func(object *Alias) {
		object.ByteP = val
	}
}

func WithIntPAliasOption(val *int) AliasOption {
	return func(object *Alias) {
		object.IntP = val
	}
}

func WithUintPAliasOption(val *uint) AliasOption {
	return func(object *Alias) {
		object.UintP = val
	}
}

func WithBytesPAliasOption(val *[]byte) AliasOption {
	return func(object *Alias) {
		object.BytesP = val
	}
}

func WithFloat64PAliasOption(val *float64) AliasOption {
	return func(object *Alias) {
		object.Float64P = val
	}
}

func WithStringPAliasOption(val *string) AliasOption {
	return func(object *Alias) {
		object.StringP = val
	}
}

func WithIAmAliasOption(val string) AliasOption {
	return func(object *Alias) {
		object.i_am = val
	}
}

func WithI8BuiltinsOption(val Int8) BuiltinsOption {
	return func(object *Builtins) {
		object.I8 = val
	}
}

func WithUBuiltinsOption(val Uint) BuiltinsOption {
	return func(object *Builtins) {
		object.U = val
	}
}

func WithIBuiltinsOption(val Int) BuiltinsOption {
	return func(object *Builtins) {
		object.I = val
	}
}

func WithStrFuncBuiltinsOption(val StrFunc) BuiltinsOption {
	return func(object *Builtins) {
		object.StrFunc = val
	}
}

func WithI8FuncBuiltinsOption(val I8Func) BuiltinsOption {
	return func(object *Builtins) {
		object.I8Func = val
	}
}

func WithU8FuncBuiltinsOption(val U8Func) BuiltinsOption {
	return func(object *Builtins) {
		object.U8Func = val
	}
}

func WithInt8BuiltinsOption(val int8) BuiltinsOption {
	return func(object *Builtins) {
		object.Int8 = val
	}
}

func WithUint8BuiltinsOption(val uint8) BuiltinsOption {
	return func(object *Builtins) {
		object.Uint8 = val
	}
}

func WithABuiltinsOption(val interface{}) BuiltinsOption {
	return func(object *Builtins) {
		object.a = val
	}
}

func WithA2BuiltinsOption(val interface{}) BuiltinsOption {
	return func(object *Builtins) {
		object.A = val
	}
}

func WithBBuiltinsOption(val byte) BuiltinsOption {
	return func(object *Builtins) {
		object.b = val
	}
}

func WithI2BuiltinsOption(val int) BuiltinsOption {
	return func(object *Builtins) {
		object.i = val
	}
}

func WithU2BuiltinsOption(val uint) BuiltinsOption {
	return func(object *Builtins) {
		object.u = val
	}
}

func WithBoolBuiltinsOption(val bool) BuiltinsOption {
	return func(object *Builtins) {
		object.Bool = val
	}
}

func WithByteBuiltinsOption(val byte) BuiltinsOption {
	return func(object *Builtins) {
		object.Byte = val
	}
}

func WithInt16BuiltinsOption(val int16) BuiltinsOption {
	return func(object *Builtins) {
		object.Int16 = val
	}
}

func WithInt32BuiltinsOption(val int32) BuiltinsOption {
	return func(object *Builtins) {
		object.Int32 = val
	}
}

func WithInt64BuiltinsOption(val int64) BuiltinsOption {
	return func(object *Builtins) {
		object.Int64 = val
	}
}

func WithUint16BuiltinsOption(val uint16) BuiltinsOption {
	return func(object *Builtins) {
		object.Uint16 = val
	}
}

func WithUint32BuiltinsOption(val uint32) BuiltinsOption {
	return func(object *Builtins) {
		object.Uint32 = val
	}
}

func WithUint64BuiltinsOption(val uint64) BuiltinsOption {
	return func(object *Builtins) {
		object.Uint64 = val
	}
}

func WithFloat32BuiltinsOption(val float32) BuiltinsOption {
	return func(object *Builtins) {
		object.Float32 = val
	}
}

func WithFloat64BuiltinsOption(val float64) BuiltinsOption {
	return func(object *Builtins) {
		object.Float64 = val
	}
}

func WithStringBuiltinsOption(val string) BuiltinsOption {
	return func(object *Builtins) {
		object.String = val
	}
}

func WithBytesBuiltinsOption(val ...byte) BuiltinsOption {
	return func(object *Builtins) {
		object.Bytes = val
	}
}

func WithBoolPBuiltinsOption(val *bool) BuiltinsOption {
	return func(object *Builtins) {
		object.BoolP = val
	}
}

func WithBytePBuiltinsOption(val *byte) BuiltinsOption {
	return func(object *Builtins) {
		object.ByteP = val
	}
}

func WithIntPBuiltinsOption(val *int) BuiltinsOption {
	return func(object *Builtins) {
		object.IntP = val
	}
}

func WithUintPBuiltinsOption(val *uint) BuiltinsOption {
	return func(object *Builtins) {
		object.UintP = val
	}
}

func WithBytesPBuiltinsOption(val *[]byte) BuiltinsOption {
	return func(object *Builtins) {
		object.BytesP = val
	}
}

func WithFloat64PBuiltinsOption(val *float64) BuiltinsOption {
	return func(object *Builtins) {
		object.Float64P = val
	}
}

func WithStringPBuiltinsOption(val *string) BuiltinsOption {
	return func(object *Builtins) {
		object.StringP = val
	}
}

func WithIAmBuiltinsOption(val string) BuiltinsOption {
	return func(object *Builtins) {
		object.i_am = val
	}
}

type SliceOption func(*Slice)

func WithI8SSliceOption(val ...int8) SliceOption {
	return func(object *Slice) {
		object.i8S = val
	}
}

func WithI8S2SliceOption(val ...*int8) SliceOption {
	return func(object *Slice) {
		object.I8S = val
	}
}

func WithI8PSSliceOption(val *[]int8) SliceOption {
	return func(object *Slice) {
		object.I8pS = val
	}
}

func WithU8SSliceOption(val ...uint8) SliceOption {
	return func(object *Slice) {
		object.u8S = val
	}
}

func WithU8S2SliceOption(val ...*uint8) SliceOption {
	return func(object *Slice) {
		object.U8S = val
	}
}

func WithU8PSSliceOption(val *[]uint8) SliceOption {
	return func(object *Slice) {
		object.U8pS = val
	}
}

func WithSSSliceOption(val ...string) SliceOption {
	return func(object *Slice) {
		object.sS = val
	}
}

func WithSS2SliceOption(val ...*string) SliceOption {
	return func(object *Slice) {
		object.SS = val
	}
}

func WithSpSSliceOption(val *[]string) SliceOption {
	return func(object *Slice) {
		object.SpS = val
	}
}

func WithBSSliceOption(val ...byte) SliceOption {
	return func(object *Slice) {
		object.bS = val
	}
}

func WithBS2SliceOption(val ...*byte) SliceOption {
	return func(object *Slice) {
		object.BS = val
	}
}

func WithBpSSliceOption(val *[]byte) SliceOption {
	return func(object *Slice) {
		object.BpS = val
	}
}

func WithBuiltinsSSliceOption(val ...Builtins) SliceOption {
	return func(object *Slice) {
		object.builtinsS = val
	}
}

func WithBuiltinsS2SliceOption(val ...*Builtins) SliceOption {
	return func(object *Slice) {
		object.BuiltinsS = val
	}
}

func WithBuiltinsPsSliceOption(val *[]Builtins) SliceOption {
	return func(object *Slice) {
		object.BuiltinsPs = val
	}
}
